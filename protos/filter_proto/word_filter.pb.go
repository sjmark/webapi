// Code generated by protoc-gen-go. DO NOT EDIT.
// source: word_filter.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KeyWord struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word" json:"word,omitempty"`
	Attr                 int32    `protobuf:"varint,2,opt,name=attr" json:"attr,omitempty"`
	Replace              string   `protobuf:"bytes,3,opt,name=replace" json:"replace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyWord) Reset()         { *m = KeyWord{} }
func (m *KeyWord) String() string { return proto.CompactTextString(m) }
func (*KeyWord) ProtoMessage()    {}
func (*KeyWord) Descriptor() ([]byte, []int) {
	return fileDescriptor_word_filter_90cb35975e851a08, []int{0}
}
func (m *KeyWord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyWord.Unmarshal(m, b)
}
func (m *KeyWord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyWord.Marshal(b, m, deterministic)
}
func (dst *KeyWord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyWord.Merge(dst, src)
}
func (m *KeyWord) XXX_Size() int {
	return xxx_messageInfo_KeyWord.Size(m)
}
func (m *KeyWord) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyWord.DiscardUnknown(m)
}

var xxx_messageInfo_KeyWord proto.InternalMessageInfo

func (m *KeyWord) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *KeyWord) GetAttr() int32 {
	if m != nil {
		return m.Attr
	}
	return 0
}

func (m *KeyWord) GetReplace() string {
	if m != nil {
		return m.Replace
	}
	return ""
}

type FindKeyWordsRes struct {
	KeyWords             []*KeyWord `protobuf:"bytes,1,rep,name=KeyWords" json:"KeyWords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FindKeyWordsRes) Reset()         { *m = FindKeyWordsRes{} }
func (m *FindKeyWordsRes) String() string { return proto.CompactTextString(m) }
func (*FindKeyWordsRes) ProtoMessage()    {}
func (*FindKeyWordsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_word_filter_90cb35975e851a08, []int{1}
}
func (m *FindKeyWordsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindKeyWordsRes.Unmarshal(m, b)
}
func (m *FindKeyWordsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindKeyWordsRes.Marshal(b, m, deterministic)
}
func (dst *FindKeyWordsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindKeyWordsRes.Merge(dst, src)
}
func (m *FindKeyWordsRes) XXX_Size() int {
	return xxx_messageInfo_FindKeyWordsRes.Size(m)
}
func (m *FindKeyWordsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FindKeyWordsRes.DiscardUnknown(m)
}

var xxx_messageInfo_FindKeyWordsRes proto.InternalMessageInfo

func (m *FindKeyWordsRes) GetKeyWords() []*KeyWord {
	if m != nil {
		return m.KeyWords
	}
	return nil
}

type Text struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Text) Reset()         { *m = Text{} }
func (m *Text) String() string { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()    {}
func (*Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_word_filter_90cb35975e851a08, []int{2}
}
func (m *Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Text.Unmarshal(m, b)
}
func (m *Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Text.Marshal(b, m, deterministic)
}
func (dst *Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Text.Merge(dst, src)
}
func (m *Text) XXX_Size() int {
	return xxx_messageInfo_Text.Size(m)
}
func (m *Text) XXX_DiscardUnknown() {
	xxx_messageInfo_Text.DiscardUnknown(m)
}

var xxx_messageInfo_Text proto.InternalMessageInfo

func (m *Text) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_word_filter_90cb35975e851a08, []int{3}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*KeyWord)(nil), "protos.KeyWord")
	proto.RegisterType((*FindKeyWordsRes)(nil), "protos.FindKeyWordsRes")
	proto.RegisterType((*Text)(nil), "protos.Text")
	proto.RegisterType((*Empty)(nil), "protos.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WordFilterClient is the client API for WordFilter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WordFilterClient interface {
	// 根据文本查找关键词
	FindKeyWords(ctx context.Context, in *Text, opts ...grpc.CallOption) (*FindKeyWordsRes, error)
	// 获取用户词典内容
	GetUserDict(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Text, error)
	// 修改用户词典内容
	EditUserDict(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Empty, error)
}

type wordFilterClient struct {
	cc *grpc.ClientConn
}

func NewWordFilterClient(cc *grpc.ClientConn) WordFilterClient {
	return &wordFilterClient{cc}
}

func (c *wordFilterClient) FindKeyWords(ctx context.Context, in *Text, opts ...grpc.CallOption) (*FindKeyWordsRes, error) {
	out := new(FindKeyWordsRes)
	err := c.cc.Invoke(ctx, "/protos.WordFilter/FindKeyWords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordFilterClient) GetUserDict(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Text, error) {
	out := new(Text)
	err := c.cc.Invoke(ctx, "/protos.WordFilter/GetUserDict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wordFilterClient) EditUserDict(ctx context.Context, in *Text, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.WordFilter/EditUserDict", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WordFilterServer is the server API for WordFilter service.
type WordFilterServer interface {
	// 根据文本查找关键词
	FindKeyWords(context.Context, *Text) (*FindKeyWordsRes, error)
	// 获取用户词典内容
	GetUserDict(context.Context, *Empty) (*Text, error)
	// 修改用户词典内容
	EditUserDict(context.Context, *Text) (*Empty, error)
}

func RegisterWordFilterServer(s *grpc.Server, srv WordFilterServer) {
	s.RegisterService(&_WordFilter_serviceDesc, srv)
}

func _WordFilter_FindKeyWords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Text)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFilterServer).FindKeyWords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.WordFilter/FindKeyWords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFilterServer).FindKeyWords(ctx, req.(*Text))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordFilter_GetUserDict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFilterServer).GetUserDict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.WordFilter/GetUserDict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFilterServer).GetUserDict(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WordFilter_EditUserDict_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Text)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WordFilterServer).EditUserDict(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.WordFilter/EditUserDict",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WordFilterServer).EditUserDict(ctx, req.(*Text))
	}
	return interceptor(ctx, in, info, handler)
}

var _WordFilter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.WordFilter",
	HandlerType: (*WordFilterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindKeyWords",
			Handler:    _WordFilter_FindKeyWords_Handler,
		},
		{
			MethodName: "GetUserDict",
			Handler:    _WordFilter_GetUserDict_Handler,
		},
		{
			MethodName: "EditUserDict",
			Handler:    _WordFilter_EditUserDict_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "word_filter.proto",
}

func init() { proto.RegisterFile("word_filter.proto", fileDescriptor_word_filter_90cb35975e851a08) }

var fileDescriptor_word_filter_90cb35975e851a08 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x63, 0xda, 0x12, 0xb8, 0x06, 0x55, 0xdc, 0x82, 0x95, 0x29, 0xf2, 0x14, 0x09, 0xe8,
	0x50, 0x06, 0x36, 0x26, 0x5a, 0x86, 0x6e, 0x16, 0x88, 0x11, 0x95, 0xfa, 0x90, 0x2c, 0x15, 0x1c,
	0xd9, 0x27, 0xd1, 0xfe, 0x1d, 0x7e, 0x29, 0xb2, 0x5b, 0x03, 0x61, 0xf2, 0xbd, 0xd3, 0xe7, 0xf7,
	0x9e, 0x0d, 0xe7, 0x9f, 0xce, 0x9b, 0x97, 0x37, 0xbb, 0x61, 0xf2, 0xd3, 0xce, 0x3b, 0x76, 0x78,
	0x9c, 0x8e, 0xa0, 0x96, 0x50, 0x2e, 0x69, 0xf7, 0xec, 0xbc, 0x41, 0x84, 0x61, 0xe4, 0xa4, 0x68,
	0x44, 0x7b, 0xaa, 0xd3, 0x1c, 0x77, 0x2b, 0x66, 0x2f, 0x8f, 0x1a, 0xd1, 0x8e, 0x74, 0x9a, 0x51,
	0x42, 0xe9, 0xa9, 0xdb, 0xac, 0xd6, 0x24, 0x07, 0x09, 0xcd, 0x52, 0xdd, 0xc1, 0x64, 0x61, 0x3f,
	0xcc, 0xc1, 0x30, 0x68, 0x0a, 0x78, 0x09, 0x27, 0x59, 0x4a, 0xd1, 0x0c, 0xda, 0xf1, 0x6c, 0xb2,
	0x6f, 0x10, 0xa6, 0x87, 0xbd, 0xfe, 0x01, 0x54, 0x0d, 0xc3, 0x47, 0xda, 0x72, 0x4c, 0x65, 0xda,
	0x72, 0x6e, 0x12, 0x67, 0x55, 0xc2, 0x68, 0xfe, 0xde, 0xf1, 0x6e, 0xf6, 0x25, 0x00, 0x22, 0xbe,
	0x48, 0xcf, 0xc1, 0x5b, 0xa8, 0xfe, 0x66, 0x62, 0x95, 0xed, 0xa3, 0x53, 0x7d, 0x91, 0xd5, 0xbf,
	0x5e, 0xaa, 0xc0, 0x2b, 0x18, 0x3f, 0x10, 0x3f, 0x05, 0xf2, 0xf7, 0x76, 0xcd, 0x78, 0x96, 0xc9,
	0x94, 0x52, 0xf7, 0x6c, 0x54, 0x81, 0xd7, 0x50, 0xcd, 0x8d, 0xfd, 0xc5, 0xfb, 0x31, 0xfd, 0xcb,
	0xaa, 0x78, 0xdd, 0x7f, 0xef, 0xcd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x58, 0x82, 0x0f,
	0x7a, 0x01, 0x00, 0x00,
}
